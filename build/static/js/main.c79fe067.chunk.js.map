{"version":3,"sources":["components/Button.jsx","assets/img/pizza-logo.svg","components/Header.jsx","components/Categories.jsx","components/SortPopup.jsx","components/CartItem.jsx","components/PizzaBlock.jsx","components/PizzaLoadingBlock.jsx","redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","pages/Home.jsx","assets/img/empty-cart.png","pages/Cart.jsx","App.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","onClick","className","outline","children","classNames","Header","useSelector","cart","totalPrice","totalCount","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","activeCategory","items","onClickCategory","map","name","index","defaultProps","SortPopup","activeSortType","onClickSortType","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","obj","type","handleOutsideClick","event","path","composedPath","includes","current","useEffect","document","body","addEventListener","ref","onSelectItem","CartItem","size","onRemove","id","onMinus","onPlus","PizzaBlock","imageUrl","sizes","price","types","onClickAddPizza","addedCount","availableTypes","availableSizes","activeType","setActivType","activeSize","setActivSize","onSelectType","active","disable","onSelectSize","PizzaLoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","SET_SORT_BY","SET_CATEGORY","initialState","category","sortBy","order","filters","state","action","payload","SET_PIZZAS","SET_LOADED","isLoaded","fetchPizzas","dispatch","axios","get","then","data","pizzas","ADD_PIZZA_CART","CLEAR_PIZZA_CART","REMOVE_CART_ITEM","PLUS_CART_ITEM","MINUS_CART_ITEM","getTotalPrice","arr","reduce","sum","getTotalSum","Object","values","value","split","firstKey","val","key","_get","currentPizzaItems","newItems","currentTotalPrice","currentTotalCount","length","newObjItems","oldItems","slice","Home","useDispatch","cartItems","onSelectCategory","useCallback","onSelectSortType","setSortBy","handleAddPizzaToCart","Array","_","i","CartEmpty","emptyCart","Cart","addedPizzas","keys","onRemoveItem","window","confirm","removeCartItem","onPlusItem","plusCartItem","onMinusItem","minusCartItem","alert","console","log","App","exact","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c79fe067.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction Button({ onClick, className, outline, children }) {\n  return (\n    <button\n      onClick={onClick}\n      className={classNames('button', className, { 'button-outline': outline })}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\n//деструктуризация\n// const obj = {name: 'vasya', old: 15}\n// const name = obj.name\n// const {name, old} = obj\n// name\n// 'vasya'\n// old\n// 15\n\n// const arr = [1, 2, 3]\n// const [a, b] = arr\n// a\n// 1\n// b\n// 2\n// c\n// c is not defined\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport logoSvg from './../assets/img/pizza-logo.svg';\nimport Button from './Button';\n\nfunction Header() {\n  const { totalPrice, totalCount } = useSelector(({ cart }) => cart);\n  // console.log(totalPrice, totalCount);\n  // const { totalPrice, totalCount } = useSelector(({ cart }) => ({\n  //   totalPrice: cart.totalPrice,\n  //   totalCount: cart.totalCount,\n  // }));\n\n  return (\n    <div className='header'>\n      <div className='container'>\n        <Link to='/'>\n          <div className='header__logo'>\n            <img width='38' src={logoSvg} alt='Pizza logo' />\n            <div>\n              <h1>React Pizza</h1>\n              <p>самая вкусная пицца во вселенной</p>\n            </div>\n          </div>\n        </Link>\n        <div className='header__cart'>\n          <Link to='/cart'>\n            <Button className='button--cart' outline={true}>\n              <span>{totalPrice}₽</span>\n              <div className='button__delimiter'></div>\n              <svg\n                width='18'\n                height='18'\n                viewBox='0 0 18 18'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'>\n                <path\n                  d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\n                  stroke='white'\n                  strokeWidth='1.8'\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                />\n                <path\n                  d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\n                  stroke='white'\n                  strokeWidth='1.8'\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                />\n                <path\n                  d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\n                  stroke='white'\n                  strokeWidth='1.8'\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                />\n              </svg>\n              <span>{totalCount}</span>\n            </Button>\n          </Link>\n          {/* <a href='/cart.html' className='button button--cart'></a> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Categories = React.memo(function Categories({ activeCategory, items, onClickCategory }) {\n  // const [activeItem, setActivItem] = React.useState(null);\n\n  // const onSelectItem = (index) => {\n  //   // setActivItem(index);\n  //   onClickCategory(index);\n  // };\n\n  return (\n    <div className='categories'>\n      <ul>\n        <li\n          className={activeCategory === null ? 'active' : ''}\n          onClick={() => onClickCategory(null)}>\n          {/* <li className={activeCategory === null ? 'active' : ''} onClick={() => onSelectItem(null)}> */}\n          Все\n        </li>\n        {items?.map((name, index) => (\n          <li\n            className={activeCategory === index ? 'active' : ''}\n            onClick={() => onClickCategory(index)}\n            // onClick={() => onSelectItem(index)}\n            key={`${name}_${index}`}>\n            {name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n\n//проверка типов пропсов\nCategories.propTypes = {\n  // activeCategory: PropTypes.oneOf([PropTypes.number, null]),\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClickCategory: PropTypes.func.isRequired,\n};\n\nCategories.defaultProps = { activeCategory: null, items: [] };\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortPopup = React.memo(function SortPopup({ items, activeSortType, onClickSortType }) {\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\n  // const [activeItem, setActivItem] = React.useState(0);\n\n  const sortRef = React.useRef(); //привязываем div sort хуком\n  // console.log(sortRef.current);\n  // console.log('items', items);\n  // console.log('activeSortType', activeSortType);\n\n  const activeLabel = items.find((obj) => obj.type === activeSortType).name; //берем из пропсов активный элемент, присваиваем его переменной activeLabel и показываем ее в нужном span\n  // const activeLabel = items.find((arr) => arr.type === activeSortType).name; //берем из пропсов активный элемент, присваиваем его переменной activeLabel и показываем ее в нужном span\n  // const activeLabel = items[activeItem].name; //берем из пропсов активный элемент, присваиваем его переменной activeLabel и показываем ее в нужном span\n  // console.log('activeLabel', activeLabel);\n\n  const toggleVisiblePopup = () => {\n    setVisiblePopup(!visiblePopup);\n  };\n  //---\n  const handleOutsideClick = (event) => {\n    const path = event.path || (event.composedPath && event.composedPath()); //bug firefox\n    // console.log(e.path); //путь к элементу на котором был клик\n    // если в пути клика(includes -  поиск по массиву путей) есть отслеживаемый сортреф(див сорт)\n    if (!path.includes(sortRef.current)) {\n      setVisiblePopup(false); //при клике вне области попапа, попап скрывается\n      // console.log('outsidePopup');\n    }\n  };\n  //навешиваем отслеживание клика на все окно\n  React.useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n  //---\n  //переключатель активного элемента массива\n  const onSelectItem = (index) => {\n    if (onClickSortType) {\n      onClickSortType(index);\n    }\n    // setActivItem(index);\n    setVisiblePopup(false); //при клике на один из элементов списка попапа, попап скрывается\n  };\n  //---\n  return (\n    <div\n      ref={sortRef}\n      // ref={(ref) => {\n      //   sortRef.current = ref;\n      // }}\n      className='sort'>\n      <div className='sort__label'>\n        <svg\n          className={visiblePopup ? 'rotated' : ''}\n          width='10'\n          height='6'\n          viewBox='0 0 10 6'\n          fill='none'\n          xmlns='http://www.w3.org/2000/svg'>\n          <path\n            d='M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z'\n            fill='#2C2C2C'\n          />\n        </svg>\n        <b>Сортировка по:</b>\n        <span onClick={toggleVisiblePopup}>{activeLabel}</span>\n      </div>\n      {visiblePopup && (\n        <div className='sort__popup'>\n          <ul>\n            {items?.map((obj, index) => (\n              <li\n                onClick={() => onSelectItem(obj)}\n                // onClick={() => onSelectItem(obj.type)}\n                className={activeSortType === obj.type ? 'active' : ''}\n                key={`${obj.type}_${index}`}>\n                {obj.name}\n              </li>\n            ))}\n            {/* <li className='active'>популярности</li>\n          <li>цене</li>\n          <li>алфавиту</li> */}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n});\n//rfce\n\n//проверка типов пропсов\nSortPopup.propTypes = {\n  activeSortType: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClickSortType: PropTypes.func.isRequired,\n};\n\nSortPopup.defaultProps = { items: [] };\n\nexport default SortPopup;\n","import Button from '../components/Button';\n\nfunction CartItem({ name, type, size, totalCount, totalPrice, onRemove, id, onMinus, onPlus }) {\n  const handlePlusItem = () => {\n    onPlus(id);\n  };\n  const handleMinusItem = () => {\n    onMinus(id);\n  };\n\n  return (\n    <div className='cart__item'>\n      <div className='cart__item-img'>\n        <img\n          className='pizza-block__image'\n          src='https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg'\n          alt='Pizza'\n        />\n      </div>\n      <div className='cart__item-info'>\n        <h3>{name}</h3>\n        <p>\n          {type} тесто, {size} см.\n        </p>\n      </div>\n      <div className='cart__item-count'>\n        <div\n          onClick={handleMinusItem}\n          className='button button--outline button--circle cart__item-count-minus'>\n          <svg\n            width='10'\n            height='10'\n            viewBox='0 0 10 10'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\n              fill='#EB5A1E'\n            />\n            <path\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\n              fill='#EB5A1E'\n            />\n          </svg>\n        </div>\n        <b>{totalCount}</b>\n        <div\n          onClick={handlePlusItem}\n          className='button button--outline button--circle cart__item-count-plus'>\n          <svg\n            width='10'\n            height='10'\n            viewBox='0 0 10 10'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\n              fill='#EB5A1E'\n            />\n            <path\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\n              fill='#EB5A1E'\n            />\n          </svg>\n        </div>\n      </div>\n      <div className='cart__item-price'>\n        <b>{totalPrice} ₽</b>\n      </div>\n      <div className='cart__item-remove'>\n        <Button\n          onClick={() => {\n            onRemove(id);\n          }}\n          className='button button--outline button--circle'>\n          <svg\n            width='10'\n            height='10'\n            viewBox='0 0 10 10'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\n              fill='#EB5A1E'\n            />\n            <path\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\n              fill='#EB5A1E'\n            />\n          </svg>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nfunction PizzaBlock({ id, name, imageUrl, sizes, price, types, onClickAddPizza, addedCount }) {\n  const availableTypes = ['тонкое', 'традиционное'];\n  const availableSizes = [26, 30, 40];\n\n  const [activeType, setActivType] = React.useState(types[0]);\n  const onSelectType = (index) => {\n    setActivType(index);\n  };\n\n  const [activeSize, setActivSize] = React.useState(0);\n  const onSelectSize = (index) => {\n    setActivSize(index);\n  };\n\n  const onAddPizza = () => {\n    const obj = {\n      id,\n      name,\n      imageUrl,\n      price,\n      size: availableSizes[activeSize],\n      type: availableTypes[activeType],\n    };\n    onClickAddPizza(obj);\n  };\n\n  return (\n    <div className='pizza-block'>\n      <img className='pizza-block__image' src={imageUrl} alt='Pizza' />\n      <h4 className='pizza-block__title'>{name}</h4>\n      <div className='pizza-block__selector'>\n        <ul>\n          {availableTypes.map((type, index) => (\n            <li\n              onClick={() => onSelectType(index)}\n              //в объекте ключ имя класса, значение условие при котором класс назначается\n              className={classNames({\n                active: activeType === index,\n                disable: !types.includes(index),\n              })}\n              // className={activeType === index ? 'active' : ''}\n              key={`${type}_${index}`}>\n              {type}\n            </li>\n          ))}\n          {/* <li className={activeType === 0 ? 'active' : ''}>тонкое</li>\n          <li className={activeType === 1 ? 'active' : ''}>традиционное</li> */}\n        </ul>\n        <ul>\n          {availableSizes.map((size, index) => (\n            <li\n              className={classNames({\n                active: activeSize === index,\n                disable: !sizes.includes(size),\n              })}\n              onClick={() => onSelectSize(index)}\n              key={`${size}_${index}`}>\n              {size} см.\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className='pizza-block__bottom'>\n        <div className='pizza-block__price'>от {price} ₽</div>\n        <Button\n          onClick={onAddPizza}\n          // onClick={() => onClickAddPizza({ id, name, imageUrl, sizes, price })}\n          className='button--add'\n          outline>\n          <svg\n            width='12'\n            height='12'\n            viewBox='0 0 12 12'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z'\n              fill='white'\n            />\n          </svg>\n          <span>Добавить</span>\n          {addedCount && <i>{addedCount}</i>}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n//name, imageUrl, sizes, price, types//проверка типов пропсов\nPizzaBlock.propTypes = {\n  name: PropTypes.string,\n  imageUrl: PropTypes.string,\n  price: PropTypes.number,\n  types: PropTypes.arrayOf(PropTypes.number).isRequired,\n  sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onAddPizza: PropTypes.func,\n  addedCount: PropTypes.number,\n};\n\nPizzaBlock.defaultProps = {\n  name: '---',\n  price: 0,\n  types: [],\n  sizes: [],\n  // addedCount: 0,\n};\n\nexport default PizzaBlock;\n","import ContentLoader from 'react-content-loader';\n\nimport React from 'react';\n\nfunction PizzaLoadingBlock() {\n  return (\n    <div>\n      <ContentLoader\n        className='pizza-block'\n        speed={2}\n        width={280}\n        height={460}\n        viewBox='0 0 280 460'\n        backgroundColor='#f3f3f3'\n        foregroundColor='#ecebeb'>\n        <circle cx='132' cy='142' r='115' />\n        <rect x='0' y='273' rx='6' ry='6' width='280' height='26' />\n        <rect x='0' y='310' rx='6' ry='6' width='280' height='84' />\n        <rect x='0' y='418' rx='6' ry='6' width='91' height='31' />\n        <rect x='137' y='408' rx='25' ry='25' width='140' height='46' />\n      </ContentLoader>\n    </div>\n  );\n}\n\nexport default PizzaLoadingBlock;\n","const SET_SORT_BY = 'REACT_PIZZA/PIZZAS/SET_SORT_BY';\nconst SET_CATEGORY = 'REACT_PIZZA/PIZZAS/SET_CATEGORY';\n\nconst initialState = {\n  category: null,\n  sortBy: {\n    type: 'rating',\n    // type: 'popular',\n    order: 'desc',\n  },\n};\n\nconst filters = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SORT_BY:\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    case SET_CATEGORY:\n      return {\n        ...state,\n        category: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSortBy = ({ type, order }) => ({\n  type: SET_SORT_BY,\n  payload: { type, order },\n});\n// export const setSortBy = (name) => ({\n//   type: SET_SORT_BY,\n//   payload: name,\n// });\n\nexport const setCategory = (catIndex) => ({\n  type: SET_CATEGORY,\n  payload: catIndex,\n});\n\nexport default filters;\n","// import { pizzasAPI } from '../../api/api';\nimport axios from 'axios';\n\nconst SET_PIZZAS = 'REACT_PIZZA/PIZZAS/SET_PIZZAS';\nconst SET_LOADED = 'REACT_PIZZA/PIZZAS/SET_LOADED';\n\nconst initialState = {\n  items: [],\n  isLoaded: false,\n};\n\nconst pizzas = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PIZZAS:\n      return {\n        ...state,\n        items: action.payload,\n        isLoaded: true,\n      };\n    case SET_LOADED:\n      return {\n        ...state,\n        isLoaded: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n//AC\nexport const setPizzas = (items) => ({\n  type: SET_PIZZAS,\n  payload: items,\n});\n\nexport const setLoaded = (payload) => ({\n  type: SET_LOADED,\n  payload,\n});\n\n//TC\n// export const fetchPizzas = (category, sortBy) => async (dispatch) => {\n//   dispatch(setLoaded(false));\n//   const data = await pizzasAPI.getPizzas(category, sortBy);\n//   dispatch(setPizzas(data));\n// };\n// export const fetchPizzas = (category, sortBy) => async (dispatch) => {\n//   // debugger;\n//   dispatch(setLoaded(false));\n//   const data = await pizzasAPI.getPizzas(category, sortBy);\n//   setTimeout(() => {\n//     dispatch(setPizzas(data));\n//   }, 1200); //simulated server response delay\n// };\n\nexport const fetchPizzas = (category, sortBy) => (dispatch) => {\n  dispatch(setLoaded(false));\n\n  axios\n    .get(\n      `/pizzas?${category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${\n        sortBy.order\n      }`,\n    )\n    .then(({ data }) => {\n      dispatch(setPizzas(data));\n    });\n}; //test disable api pizzasAPI\n\n// export const fetchPizzas = () => async (dispatch) => {\n//   const { data } = await axios.get('http://localhost:5000/pizzas');\n//   dispatch(setPizzas(data));\n// };\n\n// export const fetchPizzas = () => (dispatch) => {\n//   axios.get(`http://localhost:5000/pizzas?category=${category}`).then(({ data }) => {\n//     dispatch(setPizzas(data));\n//   });\n// };\n\nexport default pizzas;\n","const ADD_PIZZA_CART = 'REACT_PIZZA/CART/ADD_PIZZA_CART';\nconst CLEAR_PIZZA_CART = 'REACT_PIZZA/CART/CLEAR_PIZZA_CART';\nconst REMOVE_CART_ITEM = 'REACT_PIZZA/CART/REMOVE_CART_ITEM';\nconst PLUS_CART_ITEM = 'REACT_PIZZA/CART/PLUS_CART_ITEM';\nconst MINUS_CART_ITEM = 'REACT_PIZZA/CART/MINUS_CART_ITEM';\n\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n  const [firstKey, ...keys] = path.split('.');\n  return keys.reduce((val, key) => {\n    return val[key];\n  }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n  return Object.values(obj).reduce((sum, obj) => {\n    const value = _get(obj, path);\n    return sum + value;\n  }, 0);\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PIZZA_CART: {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case REMOVE_CART_ITEM: {\n      const newItems = {\n        ...state.items,\n      };\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].items.length;\n      delete newItems[action.payload];\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        totalCount: state.totalCount - currentTotalCount,\n      };\n    }\n\n    case PLUS_CART_ITEM: {\n      const newObjItems = [\n        ...state.items[action.payload].items,\n        state.items[action.payload].items[0],\n      ];\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case MINUS_CART_ITEM: {\n      const oldItems = state.items[action.payload].items;\n      const newObjItems =\n        oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case CLEAR_PIZZA_CART:\n      return { totalPrice: 0, totalCount: 0, items: {} };\n\n    default:\n      return state;\n  }\n};\n\n//AC\nexport const addPizzaToCart = (pizzaObj) => ({\n  type: ADD_PIZZA_CART,\n  payload: pizzaObj,\n});\n\nexport const clearPizzaOnCart = () => ({\n  type: CLEAR_PIZZA_CART,\n});\n\nexport const removeCartItem = (id) => ({\n  type: REMOVE_CART_ITEM,\n  payload: id,\n});\n\nexport const plusCartItem = (id) => ({\n  type: PLUS_CART_ITEM,\n  payload: id,\n});\n\nexport const minusCartItem = (id) => ({\n  type: MINUS_CART_ITEM,\n  payload: id,\n});\n\nexport default cart;\n","import React from 'react';\nimport { Categories, SortPopup, PizzaBlock, PizzaLoadingBlock } from './../components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategory, setSortBy } from '../redux/reducers/filters';\n// import { onAddCart } from '../redux/reducers/cart';//test\nimport { fetchPizzas } from '../redux/reducers/pizzas';\nimport { addPizzaToCart } from '../redux/reducers/cart';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const { items, isLoaded } = useSelector(({ pizzas }) => pizzas);\n  const { category, sortBy } = useSelector(({ filters }) => filters);\n  const cartItems = useSelector(({ cart }) => cart.items);\n  // console.log(cartItems);\n  const categoryNames = ['Мясные', 'Вегатарианская', 'Гриль', 'Острые', 'Закрытые'];\n  const sortItems = [\n    { name: 'популярности', type: 'rating', order: 'desc' },\n    // { name: 'популярности', type: 'popular', order: 'desc' },\n    { name: 'цене', type: 'price', order: 'desc' },\n    { name: 'алфавиту', type: 'name', order: 'asc' },\n  ];\n\n  React.useEffect(() => {\n    dispatch(fetchPizzas(category, sortBy));\n  }, [category, sortBy, dispatch]);\n\n  const onSelectCategory = React.useCallback(\n    (index) => {\n      dispatch(setCategory(index));\n    },\n    [dispatch],\n  );\n\n  const onSelectSortType = React.useCallback(\n    (obj) => {\n      dispatch(setSortBy(obj));\n    },\n    [dispatch],\n  );\n\n  const handleAddPizzaToCart = (obj) => {\n    dispatch(addPizzaToCart(obj));\n  };\n\n  return (\n    <div className='container'>\n      <div className='content__top'>\n        <Categories\n          activeCategory={category}\n          onClickCategory={onSelectCategory}\n          // onClickItem={(index) => dispatch(setCategory(index))}\n          items={categoryNames}\n        />\n        <SortPopup\n          // activeSortType={sortBy}\n          activeSortType={sortBy.type}\n          items={sortItems}\n          onClickSortType={onSelectSortType}\n        />\n        {/* <SortPopup items={sortItems} /> */}\n      </div>\n      <h2 className='content__title'>Все пиццы</h2>\n      <div className='content__items'>\n        {isLoaded\n          ? items.map((obj) => (\n              <PizzaBlock\n                onClickAddPizza={handleAddPizzaToCart}\n                addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\n                key={obj.id}\n                {...obj} //оператор распространения spread (…) прокидываем все свойства объекта в пропсы\n              />\n            )) //хардкодим массив 10ти заглушек(так себе решение)\n          : Array(10)\n              .fill(0)\n              .map((_, i) => <PizzaLoadingBlock key={i} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","//rcfe\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CartItem from '../components/CartItem';\nimport {\n  clearPizzaOnCart,\n  removeCartItem,\n  plusCartItem,\n  minusCartItem,\n} from '../redux/reducers/cart';\nimport emptyCart from './../assets/img/empty-cart.png';\nimport { Button } from '../components';\n\nfunction Cart() {\n  const dispatch = useDispatch();\n\n  const { items, totalPrice, totalCount } = useSelector(({ cart }) => cart);\n\n  const addedPizzas = Object.keys(items).map((key) => {\n    return items[key].items[0];\n  }); //берем из обекта items ключи и мапим в новый массив по ключам возвращая каждый первый элемент массива в массив объектов\n\n  const onClearCart = () => {\n    if (window.confirm('Вы действительно хотите очистить корзину?')) {\n      dispatch(clearPizzaOnCart());\n    }\n  };\n\n  const onRemoveItem = (id) => {\n    if (window.confirm('Вы действительно хотите удалить эти пиццы?')) {\n      dispatch(removeCartItem(id));\n    }\n  };\n\n  const onPlusItem = (id) => {\n    dispatch(plusCartItem(id));\n  };\n\n  const onMinusItem = (id) => {\n    dispatch(minusCartItem(id));\n  };\n\n  const onClickOrder = () => {\n    alert('Заказ принят!');\n    console.log('Ваш заказ', items);\n  };\n\n  return (\n    <div className='content'>\n      <div className='container container--cart'>\n        {totalPrice === 0 ? (\n          <CartEmpty />\n        ) : (\n          <div className='cart'>\n            <div className='cart__top'>\n              <h2 className='content__title'>\n                <svg\n                  width='18'\n                  height='18'\n                  viewBox='0 0 18 18'\n                  fill='none'\n                  xmlns='http://www.w3.org/2000/svg'>\n                  <path\n                    d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\n                    stroke='white'\n                    strokeWidth='1.8'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                  <path\n                    d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\n                    stroke='white'\n                    strokeWidth='1.8'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                  <path\n                    d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\n                    stroke='white'\n                    strokeWidth='1.8'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                </svg>\n                Корзина\n              </h2>\n              <div className='cart__clear'>\n                <svg\n                  width='20'\n                  height='20'\n                  viewBox='0 0 20 20'\n                  fill='none'\n                  xmlns='http://www.w3.org/2000/svg'>\n                  <path\n                    d='M2.5 5H4.16667H17.5'\n                    stroke='#B6B6B6'\n                    strokeWidth='1.2'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                  <path\n                    d='M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z'\n                    stroke='#B6B6B6'\n                    strokeWidth='1.2'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                  <path\n                    d='M8.33337 9.16667V14.1667'\n                    stroke='#B6B6B6'\n                    strokeWidth='1.2'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                  <path\n                    d='M11.6666 9.16667V14.1667'\n                    stroke='#B6B6B6'\n                    strokeWidth='1.2'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                </svg>\n                <span onClick={onClearCart}>Очистить корзину</span>\n              </div>\n            </div>\n            <div className='content__items'>\n              {addedPizzas.map((obj) => (\n                <CartItem\n                  key={obj.id}\n                  name={obj.name}\n                  type={obj.type}\n                  size={obj.size}\n                  id={obj.id}\n                  totalCount={items[obj.id].items.length}\n                  totalPrice={items[obj.id].totalPrice}\n                  onRemove={onRemoveItem}\n                  onMinus={onMinusItem}\n                  onPlus={onPlusItem}\n                />\n              ))}\n            </div>\n            <div className='cart__bottom'>\n              <div className='cart__bottom-details'>\n                <span>\n                  Всего пицц: <b>{totalCount} шт.</b>\n                </span>\n                <span>\n                  Сумма заказа: <b>{totalPrice} ₽</b>\n                </span>\n              </div>\n              <div className='cart__bottom-buttons'>\n                <NavLink to='/' className='button button--outline button--add go-back-btn'>\n                  <svg\n                    width='8'\n                    height='14'\n                    viewBox='0 0 8 14'\n                    fill='none'\n                    xmlns='http://www.w3.org/2000/svg'>\n                    <path\n                      d='M7 13L1 6.93015L6.86175 1'\n                      stroke='#D3D3D3'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    />\n                  </svg>\n                  <span>Вернуться назад</span>\n                </NavLink>\n                <Button onClick={onClickOrder} className='pay-btn'>\n                  <span>Оплатить сейчас</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction CartEmpty() {\n  return (\n    <div className='content'>\n      <div className='container container--cart'>\n        <div className='cart cart--empty'>\n          <h2>\n            Корзина пустая <i>😕</i>\n          </h2>\n          <p>\n            Вероятней всего, вы не заказывали ещё пиццу.\n            <br />\n            Для того, чтобы заказать пиццу, перейди на главную страницу.\n          </p>\n          <img src={emptyCart} alt='Empty cart' />\n          <NavLink to='/' className='button button--black'>\n            <span>Вернуться назад</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cart;\n","import { Header } from './components';\nimport { Home, Cart } from './pages';\nimport { Route } from 'react-router-dom';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <Header />\n      <div className='content'>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        <Route exact path='/cart'>\n          <Cart />\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport filters from './filters';\nimport pizzas from './pizzas';\nimport cart from './cart';\n\nconst rootReducer = combineReducers({\n  filters,\n  pizzas,\n  cart,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n// window.store = store;\n//store.getState()\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/app.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}